{"ast":null,"code":"var _jsxFileName = \"/Users/tracynle/Bootcamp/pokemon_mgmt/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport SearchBar from './components/SearchBar/SearchBar.jsx';\nimport AddTrainerButton from './components/AddTrainerButton/AddTrainerButton';\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from 'react-bootstrap/Container';\nimport TrainerProfile from './components/TrainerProfile/TrainerProfile';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getTrainers = e => {\n      fetch(\"http://localhost:3000/api/trainers\").then(async response => {\n        let jsonResponse = await response.json();\n        console.log(\"Trainers:\", jsonResponse); // store in state (e.g. state.trainers)\n\n        this.setState({\n          trainers: jsonResponse\n        });\n      }).catch(error => console.log(error));\n    };\n\n    this.state = {\n      trainers: [],\n      pokemons: [],\n      search: []\n    };\n  } // Render trainers after data is fetched from db\n\n\n  componentDidMount() {\n    this.getTrainers();\n  } // call API to get trainers+pokemons\n\n\n  // Create function for search bar \n  // take the user's input and make a search\n  // make a fetch call to db\n  makeSearch(e) {\n    const searchInput = e.target.value;\n\n    if (e.keyCode === 13) {\n      console.log(e.target.value);\n      console.log(\"Enter was pressed\");\n      fetch(\"http://localhost:3000/api/searchresults/trainer/\" + this.props.name).then(async response => {\n        let jsonResponse = await response.json();\n        console.log(\"Search results:\", jsonResponse);\n        this.setState({\n          searchResults: jsonResponse,\n          searchTerm: searchInput\n        });\n      }).catch(error => console.log(error));\n    }\n  }\n\n  render() {\n    // Map the trainer's data from db\n    let getTrainerProfile = this.state.trainers.map(trainer => {\n      return React.createElement(TrainerProfile, {\n        key: trainer.id,\n        id: trainer.id,\n        name: trainer.name,\n        pokemon_owned: trainer.pokemon_owned,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Container, {\n      className: \"trainerButtons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"justify-content-lg-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(AddTrainerButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(Col, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), getTrainerProfile));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tracynle/Bootcamp/pokemon_mgmt/client/src/App.js"],"names":["React","Component","SearchBar","AddTrainerButton","Row","Col","Container","TrainerProfile","App","constructor","props","getTrainers","e","fetch","then","response","jsonResponse","json","console","log","setState","trainers","catch","error","state","pokemons","search","componentDidMount","makeSearch","searchInput","target","value","keyCode","name","searchResults","searchTerm","render","getTrainerProfile","map","trainer","id","pokemon_owned"],"mappings":"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","sourcesContent":["import React, { Component }from 'react';\nimport './App.css';\nimport SearchBar from './components/SearchBar/SearchBar.jsx';\nimport AddTrainerButton from './components/AddTrainerButton/AddTrainerButton';\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from 'react-bootstrap/Container';\nimport TrainerProfile from './components/TrainerProfile/TrainerProfile';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      trainers: [],\n      pokemons: [],\n      search: []\n    }\n  }\n\n  // Render trainers after data is fetched from db\n  componentDidMount() {\n    this.getTrainers();\n  }\n  \n  // call API to get trainers+pokemons\n  getTrainers = (e) => {\n    fetch(\"http://localhost:3000/api/trainers\")\n    .then( async (response) => {\n      let jsonResponse = await response.json();\n      console.log(\"Trainers:\", jsonResponse);\n      // store in state (e.g. state.trainers)\n      \n      this.setState({\n        trainers: jsonResponse\n      });\n    }).catch(error => console.log(error));\n  }\n\n  // Create function for search bar \n    // take the user's input and make a search\n    // make a fetch call to db\n    makeSearch(e) {\n      const searchInput = e.target.value;\n      if(e.keyCode === 13) {\n        console.log(e.target.value);\n        console.log(\"Enter was pressed\");\n        fetch(\"http://localhost:3000/api/searchresults/trainer/\" + this.props.name)\n        .then(async (response) => {\n          let jsonResponse = await response.json();\n          console.log(\"Search results:\", jsonResponse);\n          \n          this.setState({\n            searchResults: jsonResponse,\n            searchTerm: searchInput\n          });\n        }).catch(error => console.log(error));\n      }\n\n    }\n\n  render () {\n    // Map the trainer's data from db\n    let getTrainerProfile = this.state.trainers.map(trainer => {\n      return (\n        <TrainerProfile \n          key={trainer.id}\n          id={trainer.id}\n          name={trainer.name}\n          pokemon_owned={trainer.pokemon_owned}\n        />\n      )\n    })\n    \n    return (\n      <div className=\"App\">\n        <SearchBar/>\n        <Container className=\"trainerButtons\">\n          <Row className=\"justify-content-lg-center\">\n            <Col md=\"6\">\n              <AddTrainerButton/>\n            </Col>\n            <Col md=\"6\">\n            </Col>\n          </Row>\n          {getTrainerProfile}\n        </Container>\n      </div>\n    );\n  }\n\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}