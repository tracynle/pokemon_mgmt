{"ast":null,"code":"import _objectSpread from \"/Users/tracynle/Bootcamp/pokemon_mgmt/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/tracynle/Bootcamp/pokemon_mgmt/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tracynle/Bootcamp/pokemon_mgmt/client/src/components/SearchBar/SearchBar.jsx\";\nimport React, { useState } from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport SearchModal from \"../SearchModal/SearchModal\";\nimport { connect } from \"react-redux\";\nimport { getSearchAction } from \"../../actions\";\n\nfunction SearchBar(props) {\n  const _useState = useState({\n    search: \"\",\n    modalShow: false\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  let searchInput = e => {\n    console.log(\"SEARCHING: \", e);\n    setState(_objectSpread({}, state, {\n      search: e.target.value\n    }));\n  }; // create hideModal function and set the state to false\n\n\n  let hideModal = () => {\n    setState({\n      modalShow: false\n    });\n  }; // create showModal function and set to true (so that modal will show up once button is clicked)\n\n\n  let showModal = () => {\n    console.log(\"STATE\", state);\n    setState({\n      modalShow: true\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    bg: \"dark\",\n    variant: \"dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Navbar.Brand, {\n    href: \"#home\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Pok\\xE9 Trainer Stats\"), React.createElement(Navbar.Toggle, {\n    \"aria-controls\": \"basic-navbar-nav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), React.createElement(Col, {\n    md: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Navbar.Collapse, {\n    id: \"basic-navbar-nav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Form, {\n    inline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    type: \"text\",\n    name: \"search\",\n    onChange: searchInput,\n    laceholder: \"Search\",\n    className: \"mr-sm-2 searchBar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: () => {\n      showModal();\n      props.search(props.data);\n    },\n    variant: \"outline-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Search\"), React.createElement(SearchModal, {\n    onHide: () => hideModal(),\n    show: state.modalShow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }))))));\n}\n\nconst mapDispatchtoProps = dispatch => {\n  return {\n    search: data => {\n      console.log(\"SEARCHING TRAINERS/POKEMON\", data);\n      let action = getSearchAction(data);\n      dispatch(action);\n    }\n  };\n};\n\nexport default connect(null, mapDispatchtoProps)(SearchBar);","map":{"version":3,"sources":["/Users/tracynle/Bootcamp/pokemon_mgmt/client/src/components/SearchBar/SearchBar.jsx"],"names":["React","useState","Navbar","FormControl","Form","Button","Col","SearchModal","connect","getSearchAction","SearchBar","props","search","modalShow","state","setState","searchInput","e","console","log","target","value","hideModal","showModal","data","mapDispatchtoProps","dispatch","action"],"mappings":"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","sourcesContent":["import React,{ useState} from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport SearchModal from \"../SearchModal/SearchModal\";\nimport { connect } from \"react-redux\";\nimport { getSearchAction } from \"../../actions\";\n\n\nfunction SearchBar(props){\n  const [state, setState] = useState({\n    search: \"\",\n    modalShow: false\n  });\n\n  let searchInput = (e) => {\n    console.log(\"SEARCHING: \", e);\n\n    setState({\n      ...state,\n      search: e.target.value\n    })\n  }\n\n  // create hideModal function and set the state to false\n  let hideModal = () => {\n    setState({\n        modalShow: false\n    })\n  }\n\n  // create showModal function and set to true (so that modal will show up once button is clicked)\n  let showModal = () => {\n      console.log(\"STATE\", state);\n      setState({\n          modalShow: true\n      })\n  }\n\n \n\n\n    return (\n      <div>\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Col md={7}>\n            <Navbar.Brand href=\"#home\">Pok√© Trainer Stats</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          </Col>\n          <Col md={5}>\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Form inline>\n                <FormControl \n                  type=\"text\" \n                  name=\"search\"\n                  onChange= {searchInput}\n                  laceholder=\"Search\" \n                  className=\"mr-sm-2 searchBar\" \n                  />\n                <Button \n                  onClick={() => {\n                    showModal();\n                    props.search(props.data);\n                  }}\n                  variant=\"outline-success\"\n                  >Search\n                </Button>\n                <SearchModal\n                  onHide={() => hideModal()}\n                  show= {state.modalShow}\n                />\n              </Form>\n            </Navbar.Collapse>\n          </Col>\n        </Navbar>\n\n      </div>\n    )\n    \n}\n\nconst mapDispatchtoProps = (dispatch) => {\n  return {\n    search: (data) => {\n      console.log(\"SEARCHING TRAINERS/POKEMON\", data);\n      let action = getSearchAction(data);\n      dispatch(action);\n    }\n  }\n}\n\n\n\nexport default connect(null, mapDispatchtoProps)(SearchBar);"]},"metadata":{},"sourceType":"module"}