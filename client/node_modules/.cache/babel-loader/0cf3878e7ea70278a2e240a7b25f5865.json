{"ast":null,"code":"import _slicedToArray from \"/Users/tracynle/Bootcamp/pokemon_mgmt/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tracynle/Bootcamp/pokemon_mgmt/client/src/components/PokemonForm/PokemonForm.jsx\";\nimport React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport \"./style.css\";\nimport { getAddPokemonAction } from \"../../actions\";\nimport { connect } from \"react-redux\";\n\nfunction PokemonForm(props) {\n  const _useState = useState({\n    name: \"\",\n    type: \"\",\n    move: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  let nameInput = e => {\n    setState({\n      name: e.target.value\n    });\n  };\n\n  let typeInput = e => {\n    setState({\n      move: e.target.value\n    });\n  };\n\n  let moveInput = e => {\n    setState({\n      type: e.target.value\n    });\n  };\n\n  return React.createElement(Form, {\n    className: \"pokemonForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"formBasic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Pokemon\"), React.createElement(Form.Control, {\n    type: \"text\",\n    onChange: nameInput,\n    placeholder: \"Pokemon name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"formBasic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Type\"), React.createElement(Form.Control, {\n    type: \"text\",\n    onChange: typeInput,\n    placeholder: \"Enter type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"formBasic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Move\"), React.createElement(Form.Control, {\n    type: \"text\",\n    onChange: moveInput,\n    placeholder: \"Enter moves\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), React.createElement(Button, {\n    variant: \"primary\",\n    onClick: () => {\n      props.onHide();\n      props.submitForm({\n        name: state.name,\n        type: state.type,\n        move: state.move\n      }, props.trainerName);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Submit\"));\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    submitForm: (data, trainerName) => {\n      console.log(\"Submitted Pokemon Form!\", data);\n      dispatch(getAddPokemonAction(data, trainerName));\n    }\n  };\n}; // Given updated state build new props for pokemonForm\n\n\nconst mapStateToProps = state => {\n  return {\n    trainerName: state.trainerReducer.addToMe\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PokemonForm);","map":{"version":3,"sources":["/Users/tracynle/Bootcamp/pokemon_mgmt/client/src/components/PokemonForm/PokemonForm.jsx"],"names":["React","useState","Button","Form","getAddPokemonAction","connect","PokemonForm","props","name","type","move","state","setState","nameInput","e","target","value","typeInput","moveInput","onHide","submitForm","trainerName","mapDispatchToProps","dispatch","data","console","log","mapStateToProps","trainerReducer","addToMe"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport \"./style.css\";\nimport { getAddPokemonAction} from \"../../actions\";\nimport { connect } from \"react-redux\";\n\nfunction PokemonForm(props) {\n  const [state, setState] = useState({\n    name: \"\",\n    type: \"\",\n    move: \"\"\n  });\n\n  let nameInput = (e) => {\n    setState({\n      name: e.target.value,\n    })\n  }\n  \n  let typeInput = (e) => {\n    setState({\n      move: e.target.value\n    })\n  }\n  \n  let moveInput = (e) => {\n    setState({\n      type: e.target.value\n    })\n  }\n\n  return (\n    <Form className=\"pokemonForm\">\n      <Form.Group controlId=\"formBasic\">\n        <Form.Label>Pokemon</Form.Label>\n        <Form.Control type=\"text\" onChange={nameInput} placeholder=\"Pokemon name\" />\n      </Form.Group>\n      \n      <Form.Group controlId=\"formBasic\">\n        <Form.Label>Type</Form.Label>\n        <Form.Control type=\"text\" onChange={typeInput} placeholder=\"Enter type\" />\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasic\">\n        <Form.Label>Move</Form.Label>\n        <Form.Control type=\"text\" onChange={moveInput} placeholder=\"Enter moves\" />\n      </Form.Group>\n\n      <Button \n        variant=\"primary\" \n\n        onClick={() => {\n          props.onHide();\n          props.submitForm({\n              name: state.name,\n              type: state.type,\n              move: state.move\n            },\n            props.trainerName\n        )}}     \n        >\n        Submit\n      </Button>\n    </Form>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  \n  return {\n    submitForm: (data, trainerName) => {\n      console.log(\"Submitted Pokemon Form!\", data);\n      dispatch(getAddPokemonAction(data, trainerName));\n    }\n  }\n}\n\n// Given updated state build new props for pokemonForm\nconst mapStateToProps = (state) => {\n  return {\n    trainerName: state.trainerReducer.addToMe\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PokemonForm);"]},"metadata":{},"sourceType":"module"}