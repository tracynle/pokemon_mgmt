{"ast":null,"code":"var _jsxFileName = \"/Users/tracynle/Bootcamp/pokemon_mgmt/client/src/App.js\";\nimport React, { useEffect } from 'react';\nimport './App.css';\nimport SearchBar from './components/SearchBar/SearchBar.jsx';\nimport AddTrainerButton from './components/AddTrainerButton/AddTrainerButton';\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from 'react-bootstrap/Container';\nimport TrainerProfile from './components/TrainerProfile/TrainerProfile';\nimport { getTrainersAction } from \"./actions\";\nimport { connect } from 'react-redux';\n\nfunction App(props) {\n  // This replaces componentDidMount (that was in the class but we're using function)\n  let callbackFunctionAfterMounted = () => {\n    props.dispatchFetchTrainers();\n  };\n\n  useEffect(callbackFunctionAfterMounted, []);\n  console.log(\"ZZZZZZ\");\n  console.log(props); // Map the trainer's data from db\n\n  let getTrainerProfile = Object.values(props.trainers).map(trainer => {\n    return React.createElement(TrainerProfile, {\n      key: trainer.id,\n      id: trainer.id,\n      name: trainer.name,\n      pokemon_owned: trainer.pokemon_owned,\n      pokemons: trainer.pokemons,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    });\n  }); // map search results in searchbar\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(SearchBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(Container, {\n    className: \"trainerButtons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Row, {\n    className: \"justify-content-lg-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(AddTrainerButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, getTrainerProfile))));\n} // This function gets called when the Redux store gets updated\n// maps the changed state to the mapped properties\n\n\nfunction mapStateToProps(fullState) {\n  console.log('mapStateToProps in App', fullState);\n  return {\n    trainers: fullState.trainerReducer.trainers\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatchFetchTrainers: () => {\n      dispatch(getTrainersAction());\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/tracynle/Bootcamp/pokemon_mgmt/client/src/App.js"],"names":["React","useEffect","SearchBar","AddTrainerButton","Row","Col","Container","TrainerProfile","getTrainersAction","connect","App","props","callbackFunctionAfterMounted","dispatchFetchTrainers","console","log","getTrainerProfile","Object","values","trainers","map","trainer","id","name","pokemon_owned","pokemons","mapStateToProps","fullState","trainerReducer","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,gBAAP,MAA6B,gDAA7B;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,cAAP,MAA2B,4CAA3B;AACA,SAASC,iBAAT,QAAkC,WAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAClB;AACA,MAAIC,4BAA4B,GAAG,MAAM;AACvCD,IAAAA,KAAK,CAACE,qBAAN;AACD,GAFD;;AAGAZ,EAAAA,SAAS,CAACW,4BAAD,EAA+B,EAA/B,CAAT;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EARkB,CASlB;;AACA,MAAIK,iBAAiB,GAAGC,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACQ,QAApB,EAA8BC,GAA9B,CAAkCC,OAAO,IAAI;AACnE,WACE,oBAAC,cAAD;AACE,MAAA,GAAG,EAAEA,OAAO,CAACC,EADf;AAEE,MAAA,EAAE,EAAED,OAAO,CAACC,EAFd;AAGE,MAAA,IAAI,EAAED,OAAO,CAACE,IAHhB;AAIE,MAAA,aAAa,EAAEF,OAAO,CAACG,aAJzB;AAKE,MAAA,QAAQ,EAAGH,OAAO,CAACI,QALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD,GAXuB,CAAxB,CAVkB,CAuBlB;;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,EAME,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,iBADH,CADF,CANF,CAFF,CADF;AAiBD,C,CAED;AACA;;;AACA,SAASU,eAAT,CAAyBC,SAAzB,EAAoC;AAClCb,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCY,SAAtC;AACA,SAAO;AACLR,IAAAA,QAAQ,EAAEQ,SAAS,CAACC,cAAV,CAAyBT;AAD9B,GAAP;AAID;;AAED,SAASU,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLjB,IAAAA,qBAAqB,EAAE,MAAM;AAC3BiB,MAAAA,QAAQ,CAACtB,iBAAiB,EAAlB,CAAR;AACD;AAHI,GAAP;AAKD;;AAED,eAAeC,OAAO,CAACiB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CnB,GAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport './App.css';\nimport SearchBar from './components/SearchBar/SearchBar.jsx';\nimport AddTrainerButton from './components/AddTrainerButton/AddTrainerButton';\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from 'react-bootstrap/Container';\nimport TrainerProfile from './components/TrainerProfile/TrainerProfile';\nimport { getTrainersAction } from \"./actions\";\nimport { connect } from 'react-redux';\n\nfunction App(props) {\n  // This replaces componentDidMount (that was in the class but we're using function)\n  let callbackFunctionAfterMounted = () => {\n    props.dispatchFetchTrainers();\n  }\n  useEffect(callbackFunctionAfterMounted, []);\n\n  console.log(\"ZZZZZZ\");\n  console.log(props);\n  // Map the trainer's data from db\n  let getTrainerProfile = Object.values(props.trainers).map(trainer => {\n    return (\n      <TrainerProfile \n        key={trainer.id}\n        id={trainer.id}\n        name={trainer.name}\n        pokemon_owned={trainer.pokemon_owned}\n        pokemons= {trainer.pokemons}\n      />\n\n    )\n  })\n\n  // map search results in searchbar\n\n  return (\n    <div className=\"App\">\n      <SearchBar/>\n      <Container className=\"trainerButtons\">\n        <Row className=\"justify-content-lg-center\">\n          <Col md=\"6\">\n            <AddTrainerButton />\n          </Col>\n        </Row>\n        <Row>\n          <Col md=\"12\">\n            {getTrainerProfile}\n          </Col></Row>\n      </Container>\n    </div>\n  );\n  \n}\n\n// This function gets called when the Redux store gets updated\n// maps the changed state to the mapped properties\nfunction mapStateToProps(fullState) {\n  console.log('mapStateToProps in App', fullState);\n  return {\n    trainers: fullState.trainerReducer.trainers,\n    \n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatchFetchTrainers: () => {\n      dispatch(getTrainersAction());\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}