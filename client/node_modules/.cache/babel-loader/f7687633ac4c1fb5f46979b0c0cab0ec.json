{"ast":null,"code":"import _objectSpread from \"/Users/tracynle/Bootcamp/pokemon_mgmt/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n// create a reducer that will keep track of added trainers and pokemon\n// store initializes with 0 trainers in an empty array\nconst initialState = {\n  trainers: {},\n  addToMe: \"\"\n};\n\nconst trainerReducer = (state = initialState, action) => {\n  let newState;\n\n  let trainersCopy = _objectSpread({}, state.trainers);\n\n  switch (action.type) {\n    case \"ADD TRAINER\":\n      console.log(\"Case ADD TRAINER\", action);\n      console.log(\"state\", state); // https://redux.js.org/basics/reducers\n      // \"...\" is to spread trainers array into a new array, since we're not supposed to change state.trainers array directly\n\n      trainersCopy[action.data.name] = action.data; // {name: \"Misty\", pokemons: []}\n      // map[newKey] = newValue\n\n      newState = Object.assign({}, state, {\n        trainers: trainersCopy\n      });\n      console.log(newState);\n      return newState;\n\n    case \"ADD POKEMON\":\n      console.log(\"Case ADD POKEMON\", action);\n      console.log(\"state\", state); // get access to trainers pokemon into array\n\n      let trainer = _objectSpread({}, state.trainers[state.addToMe]);\n\n      trainer.pokemons.push(action.data);\n      trainersCopy[state.addToMe] = trainer;\n      newState = Object.assign({}, state, {\n        trainers: trainersCopy\n      });\n      console.log(newState);\n      return newState;\n\n    case \"ADD TO ME\":\n      console.log(\"Case ADD TO ME\", action.data);\n      console.log(\"state\", state);\n      newState = Object.assign({}, state, {\n        addToMe: action.data\n      });\n      console.log(newState);\n      return newState;\n    //Delete pokemon from the array\n\n    case \"DELETE POKEMON\":\n      console.log(\"Case DELETE POKEMON\", action.id);\n      console.log(\"state\", state);\n      newState = Object.assign({}, state, {\n        trainer: action.id\n      });\n      console.log(\"Delete pokemon newState\", newState);\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default trainerReducer;","map":{"version":3,"sources":["/Users/tracynle/Bootcamp/pokemon_mgmt/client/src/reducers/trainerReducer.jsx"],"names":["initialState","trainers","addToMe","trainerReducer","state","action","newState","trainersCopy","type","console","log","data","name","Object","assign","trainer","pokemons","push","id"],"mappings":";AAAA;AAEA;AACA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO;AAEjBC,EAAAA,OAAO,EAAE;AAFQ,CAArB;;AAKA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACrD,MAAIC,QAAJ;;AACA,MAAIC,YAAY,qBAAOH,KAAK,CAACH,QAAb,CAAhB;;AAEA,UAAOI,MAAM,CAACG,IAAd;AAEI,SAAK,aAAL;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCL,MAAhC;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBN,KAArB,EAFJ,CAII;AACA;;AAEAG,MAAAA,YAAY,CAACF,MAAM,CAACM,IAAP,CAAYC,IAAb,CAAZ,GAAiCP,MAAM,CAACM,IAAxC,CAPJ,CAOkD;AAC9C;;AAEAL,MAAAA,QAAQ,GAAGO,MAAM,CAACC,MAAP,CACP,EADO,EAEPV,KAFO,EAGP;AAACH,QAAAA,QAAQ,EAAEM;AAAX,OAHO,CAAX;AAMAE,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACA,aAAOA,QAAP;;AAEJ,SAAK,aAAL;AACIG,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCL,MAAhC;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBN,KAArB,EAFJ,CAII;;AACA,UAAIW,OAAO,qBAAOX,KAAK,CAACH,QAAN,CAAeG,KAAK,CAACF,OAArB,CAAP,CAAX;;AACAa,MAAAA,OAAO,CAACC,QAAR,CAAiBC,IAAjB,CAAsBZ,MAAM,CAACM,IAA7B;AAEAJ,MAAAA,YAAY,CAACH,KAAK,CAACF,OAAP,CAAZ,GAA8Ba,OAA9B;AAEAT,MAAAA,QAAQ,GAAGO,MAAM,CAACC,MAAP,CACP,EADO,EAEPV,KAFO,EAGP;AAACH,QAAAA,QAAQ,EAAEM;AAAX,OAHO,CAAX;AAMAE,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACA,aAAOA,QAAP;;AAEJ,SAAK,WAAL;AACIG,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BL,MAAM,CAACM,IAArC;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBN,KAArB;AAEAE,MAAAA,QAAQ,GAAGO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBV,KAAlB,EAAyB;AAACF,QAAAA,OAAO,EAAEG,MAAM,CAACM;AAAjB,OAAzB,CAAX;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACA,aAAOA,QAAP;AAIJ;;AACA,SAAK,gBAAL;AACIG,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCL,MAAM,CAACa,EAA1C;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBN,KAArB;AAEAE,MAAAA,QAAQ,GAAGO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBV,KAAlB,EAAyB;AAACW,QAAAA,OAAO,EAAEV,MAAM,CAACa;AAAjB,OAAzB,CAAX;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAsCJ,QAAtC;AACA,aAAOA,QAAP;;AAGJ;AACI,aAAOF,KAAP;AA7DR;AAgEH,CApED;;AAsEA,eAAeD,cAAf","sourcesContent":["// create a reducer that will keep track of added trainers and pokemon\n\n// store initializes with 0 trainers in an empty array\nconst initialState = {\n    trainers: {},\n    addToMe: \"\"\n};\n\nconst trainerReducer = (state = initialState, action) => {\n    let newState;\n    let trainersCopy = {...state.trainers};\n\n    switch(action.type) {\n\n        case \"ADD TRAINER\":\n            console.log(\"Case ADD TRAINER\", action);\n            console.log(\"state\", state);\n\n            // https://redux.js.org/basics/reducers\n            // \"...\" is to spread trainers array into a new array, since we're not supposed to change state.trainers array directly\n\n            trainersCopy[action.data.name] = action.data; // {name: \"Misty\", pokemons: []}\n            // map[newKey] = newValue\n\n            newState = Object.assign(\n                {}, \n                state, \n                {trainers: trainersCopy} \n            );\n\n            console.log(newState);\n            return newState;\n\n        case \"ADD POKEMON\":\n            console.log(\"Case ADD POKEMON\", action);\n            console.log(\"state\", state);\n\n            // get access to trainers pokemon into array\n            let trainer = {...state.trainers[state.addToMe]}\n            trainer.pokemons.push(action.data);\n\n            trainersCopy[state.addToMe] = trainer;\n            \n            newState = Object.assign(\n                {},\n                state,\n                {trainers: trainersCopy}\n            );\n\n            console.log(newState);\n            return newState;\n\n        case \"ADD TO ME\":\n            console.log(\"Case ADD TO ME\", action.data);\n            console.log(\"state\", state);\n\n            newState = Object.assign({}, state, {addToMe: action.data})\n            console.log(newState);\n            return newState;\n\n            \n\n        //Delete pokemon from the array\n        case \"DELETE POKEMON\":\n            console.log(\"Case DELETE POKEMON\", action.id);\n            console.log(\"state\", state);\n            \n            newState = Object.assign({}, state, {trainer: action.id});\n            console.log(\"Delete pokemon newState\",newState);\n            return newState;\n\n\n        default: \n            return state;\n\n    }\n}\n\nexport default trainerReducer;\n"]},"metadata":{},"sourceType":"module"}