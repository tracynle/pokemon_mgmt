{"ast":null,"code":"var _jsxFileName = \"/Users/tracynle/Bootcamp/pokemon_mgmt/client/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport SearchBar from './components/SearchBar/SearchBar.jsx';\nimport AddTrainerButton from './components/AddTrainerButton/AddTrainerButton';\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from 'react-bootstrap/Container';\nimport TrainerProfile from './components/TrainerProfile/TrainerProfile';\nimport { connect } from 'react-redux';\n\nfunction App(props) {\n  // call API to get trainers+pokemons\n  let getTrainers = e => {\n    fetch(\"http://localhost:3001/api/trainers\").then(async response => {\n      let jsonResponse = await response.json();\n      console.log(\"Trainers:\", jsonResponse); // store in state (e.g. state.trainers)\n      // this.setState({\n      //   trainers: jsonResponse\n      // });\n    }).catch(error => console.log(error));\n  }; // Map the trainer's data from db\n\n\n  let getTrainerProfile = props.trainers.map(trainer => {\n    return React.createElement(TrainerProfile, {\n      key: trainer.id,\n      id: trainer.id,\n      name: trainer.name,\n      pokemon_owned: trainer.pokemon_owned,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    });\n  }); // map search results in searchbar\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  });\n} // This function gets called when the Redux store gets updated\n\n\nfunction mapStateToProps(state = []) {\n  console.log('mapStateToProps', state);\n  return {\n    trainers: state\n  };\n}\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/Users/tracynle/Bootcamp/pokemon_mgmt/client/src/App.js"],"names":["React","SearchBar","AddTrainerButton","Row","Col","Container","TrainerProfile","connect","App","props","getTrainers","e","fetch","then","response","jsonResponse","json","console","log","catch","error","getTrainerProfile","trainers","map","trainer","id","name","pokemon_owned","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,gBAAP,MAA6B,gDAA7B;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,cAAP,MAA2B,4CAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAClB;AACA,MAAIC,WAAW,GAAIC,CAAD,IAAO;AACvBC,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACCC,IADD,CACO,MAAOC,QAAP,IAAoB;AACzB,UAAIC,YAAY,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAzB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,YAAzB,EAFyB,CAGzB;AAEA;AACA;AACA;AACD,KATD,EASGI,KATH,CASSC,KAAK,IAAIH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CATlB;AAUD,GAXD,CAFkB,CAgBlB;;;AACA,MAAIC,iBAAiB,GAAGZ,KAAK,CAACa,QAAN,CAAeC,GAAf,CAAmBC,OAAO,IAAI;AACpD,WACE,oBAAC,cAAD;AACE,MAAA,GAAG,EAAEA,OAAO,CAACC,EADf;AAEE,MAAA,EAAE,EAAED,OAAO,CAACC,EAFd;AAGE,MAAA,IAAI,EAAED,OAAO,CAACE,IAHhB;AAIE,MAAA,aAAa,EAAEF,OAAO,CAACG,aAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD,GATuB,CAAxB,CAjBkB,CA4BlB;;AACA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAKD,C,CAED;;;AACA,SAASC,eAAT,CAAyBC,KAAK,GAAG,EAAjC,EAAqC;AACnCZ,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BW,KAA/B;AACA,SAAO;AACLP,IAAAA,QAAQ,EAAEO;AADL,GAAP;AAGD;;AACD,eAAetB,OAAO,CAACqB,eAAD,CAAP,CAAyBpB,GAAzB,CAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport SearchBar from './components/SearchBar/SearchBar.jsx';\nimport AddTrainerButton from './components/AddTrainerButton/AddTrainerButton';\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from 'react-bootstrap/Container';\nimport TrainerProfile from './components/TrainerProfile/TrainerProfile';\nimport { connect } from 'react-redux';\n\nfunction App(props) {\n  // call API to get trainers+pokemons\n  let getTrainers = (e) => {\n    fetch(\"http://localhost:3001/api/trainers\")\n    .then( async (response) => {\n      let jsonResponse = await response.json();\n      console.log(\"Trainers:\", jsonResponse);\n      // store in state (e.g. state.trainers)\n      \n      // this.setState({\n      //   trainers: jsonResponse\n      // });\n    }).catch(error => console.log(error));\n  }\n\n  \n  // Map the trainer's data from db\n  let getTrainerProfile = props.trainers.map(trainer => {\n    return (\n      <TrainerProfile \n        key={trainer.id}\n        id={trainer.id}\n        name={trainer.name}\n        pokemon_owned={trainer.pokemon_owned}\n      />\n    )\n  })\n\n  // map search results in searchbar\n  return (\n    <div className=\"App\">\n    </div>\n  );\n  \n}\n\n// This function gets called when the Redux store gets updated\nfunction mapStateToProps(state = []) {\n  console.log('mapStateToProps', state);\n  return {\n    trainers: state\n  }\n}\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}