{"ast":null,"code":"import _slicedToArray from \"/Users/tracynle/Bootcamp/pokemon_mgmt/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tracynle/Bootcamp/pokemon_mgmt/client/src/components/AddPokemonButton/AddPokemonButton.jsx\";\nimport React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport PokemonModal from \"../../components/PokemonModal/PokemonModal\";\nimport { connect } from \"react-redux\";\nimport { getAddToMeAction } from \"../../actions\";\n\nfunction AddPokemonButton(props) {\n  const _useState = useState({\n    modalShow: false\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1]; // create hideModal function and set the state to false\n\n\n  let hideModal = () => {\n    setState({\n      modalShow: false\n    });\n  }; // create showModal function and set to true (so that modal will show up once button is clicked)\n\n\n  let showModal = () => {\n    console.log(\"STATE\", state);\n    setState({\n      modalShow: true\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"success\",\n    onClick: () => {\n      showModal(); // include onclick to dispatch a trainer to track of trainer once pokemon is added\n\n      props.dispatchAddToMe(props.name);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Add Pokemon\"), React.createElement(PokemonModal, {\n    onHide: () => hideModal(),\n    show: state.modalShow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }));\n}\n\nconst mapDispatchToProps = dispatch => {\n  // function returns props \n  return {\n    dispatchAddToMe: data => {\n      console.log(\"Pokemon linked to Trainer\", data);\n      let action = getAddToMeAction(data);\n      dispatch(action);\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(AddPokemonButton);","map":{"version":3,"sources":["/Users/tracynle/Bootcamp/pokemon_mgmt/client/src/components/AddPokemonButton/AddPokemonButton.jsx"],"names":["React","useState","Button","PokemonModal","connect","getAddToMeAction","AddPokemonButton","props","modalShow","state","setState","hideModal","showModal","console","log","dispatchAddToMe","name","mapDispatchToProps","dispatch","data","action"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA6B,OAA7B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,eAAjC;;AAGA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA,oBACHN,QAAQ,CAAC;AAC/BO,IAAAA,SAAS,EAAE;AADoB,GAAD,CADL;AAAA;AAAA,QACtBC,KADsB;AAAA,QACfC,QADe,kBAK7B;;;AACA,MAAIC,SAAS,GAAG,MAAM;AAClBD,IAAAA,QAAQ,CAAC;AACLF,MAAAA,SAAS,EAAE;AADN,KAAD,CAAR;AAGH,GAJD,CAN6B,CAY7B;;;AACA,MAAII,SAAS,GAAG,MAAM;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBL,KAArB;AACAC,IAAAA,QAAQ,CAAC;AACLF,MAAAA,SAAS,EAAE;AADN,KAAD,CAAR;AAGH,GALD;;AASA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAC,SADZ;AAEI,IAAA,OAAO,EAAE,MAAM;AACXI,MAAAA,SAAS,GADE,CAEX;;AACAL,MAAAA,KAAK,CAACQ,eAAN,CAAsBR,KAAK,CAACS,IAA5B;AACH,KANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAWI,oBAAC,YAAD;AACI,IAAA,MAAM,EAAE,MAAML,SAAS,EAD3B;AAEI,IAAA,IAAI,EAAEF,KAAK,CAACD,SAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CADJ;AAmBH;;AAED,MAAMS,kBAAkB,GAAIC,QAAD,IAAc;AAErC;AACA,SAAO;AACHH,IAAAA,eAAe,EAAGI,IAAD,IAAU;AACvBN,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCK,IAAzC;AACA,UAAIC,MAAM,GAAGf,gBAAgB,CAACc,IAAD,CAA7B;AACAD,MAAAA,QAAQ,CAACE,MAAD,CAAR;AACH;AALE,GAAP;AAQH,CAXD;;AAaA,eAAehB,OAAO,CAAC,IAAD,EAAOa,kBAAP,CAAP,CAAkCX,gBAAlC,CAAf","sourcesContent":["import React, {useState}from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport PokemonModal from \"../../components/PokemonModal/PokemonModal\";\nimport { connect } from \"react-redux\";\nimport { getAddToMeAction } from \"../../actions\";\n\n\nfunction AddPokemonButton(props) {\n    const [state, setState] = useState({\n        modalShow: false\n    });\n\n    // create hideModal function and set the state to false\n    let hideModal = () => {\n        setState({\n            modalShow: false\n        })\n    }\n\n    // create showModal function and set to true (so that modal will show up once button is clicked)\n    let showModal = () => {\n        console.log(\"STATE\", state);\n        setState({\n            modalShow: true\n        })\n    }\n    \n     \n    \n    return (\n        <div>\n            <Button \n                variant=\"success\" \n                onClick={() => {\n                    showModal();\n                    // include onclick to dispatch a trainer to track of trainer once pokemon is added\n                    props.dispatchAddToMe(props.name);\n                }} \n            >\n                Add Pokemon\n            </Button>\n            <PokemonModal \n                onHide={() => hideModal()} \n                show={state.modalShow}\n            />\n        </div>\n    )\n    \n}\n\nconst mapDispatchToProps = (dispatch) => {\n\n    // function returns props \n    return {\n        dispatchAddToMe: (data) => {\n            console.log(\"Pokemon linked to Trainer\", data);\n            let action = getAddToMeAction(data);\n            dispatch(action);\n        }\n    }\n\n}\n\nexport default connect(null, mapDispatchToProps)(AddPokemonButton);"]},"metadata":{},"sourceType":"module"}