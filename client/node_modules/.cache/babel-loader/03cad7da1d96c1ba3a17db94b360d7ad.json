{"ast":null,"code":"var _jsxFileName = \"/Users/tracynle/Bootcamp/pokemon_mgmt/client/src/components/TrainerForm/TrainerForm.jsx\";\nimport React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport \"./style.css\";\nimport { addTrainer } from \"../../actions\";\nimport { connect } from 'react-redux';\n\nfunction trainerForm(props) {\n  let formControlReference = React.createRef();\n  return React.createElement(Form, {\n    className: \"trainerForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"formBasic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Name\"), React.createElement(Form.Control, {\n    ref: formControlReference,\n    type: \"text\",\n    placeholder: \"Enter name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })), React.createElement(Button, {\n    variant: \"primary\",\n    onClick: () => {\n      props.onHide();\n      props.submitForm({\n        // name: formControlReference.value,\n        pokemons: []\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Submit\"));\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    submitForm: data => {\n      console.log(\"Submitted!\", data);\n      dispatch(addTrainer(data));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(trainerForm);","map":{"version":3,"sources":["/Users/tracynle/Bootcamp/pokemon_mgmt/client/src/components/TrainerForm/TrainerForm.jsx"],"names":["React","Button","Form","addTrainer","connect","trainerForm","props","formControlReference","createRef","onHide","submitForm","pokemons","mapDispatchToProps","dispatch","data","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAO,aAAP;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAE1B,MAAIC,oBAAoB,GAAGP,KAAK,CAACQ,SAAN,EAA3B;AAEA,SACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,GAAG,EAAED,oBAAnB;AAAyC,IAAA,IAAI,EAAC,MAA9C;AAAqD,IAAA,WAAW,EAAC,YAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADJ,EAqBI,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,SADV;AAEE,IAAA,OAAO,EAAE,MAAM;AACbD,MAAAA,KAAK,CAACG,MAAN;AACAH,MAAAA,KAAK,CAACI,UAAN,CAAiB;AACf;AACAC,QAAAA,QAAQ,EAAE;AAFK,OAAjB;AAGD,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBJ,CADF;AAmCD;;AAED,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLH,IAAAA,UAAU,EAAGI,IAAD,IAAU;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,IAA1B;AACAD,MAAAA,QAAQ,CAACV,UAAU,CAACW,IAAD,CAAX,CAAR;AACH;AAJI,GAAP;AAMD,CAPD;;AASA,eAAeV,OAAO,CAAC,IAAD,EAAOQ,kBAAP,CAAP,CAAkCP,WAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport \"./style.css\";\nimport { addTrainer } from \"../../actions\";\nimport { connect } from 'react-redux';\n\nfunction trainerForm(props) {\n\n  let formControlReference = React.createRef();\n\n  return (\n    <Form className=\"trainerForm\">\n        <Form.Group controlId=\"formBasic\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control ref={formControlReference} type=\"text\" placeholder=\"Enter name\" />\n        </Form.Group>\n    \n        {/* <Form.Group controlId=\"formBasic\">\n          <Form.Label>Pokemon</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Pokemon name\" />\n        </Form.Group>\n        \n        <Form.Group controlId=\"formBasic\">\n          <Form.Label>Type</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Enter type\" />\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasic\">\n          <Form.Label>Move</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Enter moves\" />\n        </Form.Group> */}\n\n        <Button \n          variant=\"primary\" \n          onClick={() => {\n            props.onHide();\n            props.submitForm({\n              // name: formControlReference.value,\n              pokemons: []\n        })}}>\n          Submit\n        </Button>\n    </Form>\n  )\n\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    submitForm: (data) => {\n        console.log(\"Submitted!\", data);\n        dispatch(addTrainer(data));\n    }\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(trainerForm);"]},"metadata":{},"sourceType":"module"}