{"ast":null,"code":"var _jsxFileName = \"/Users/tracynle/Bootcamp/pokemon_mgmt/client/src/components/TrainerProfile/TrainerProfile.jsx\";\nimport React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport AddPokemonButton from \"../../components/AddPokemonButton/AddPokemonButton\";\nimport DeletePokemonButton from \"../../components/DeletePokemonButton/DeletePokemonButton\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"./style.css\"; // import { addToMe } from \"../../actions\";\n\nimport { connect } from \"react-redux\";\nimport PokemonProfile from \"../../components/PokemonProfile/PokemonProfile\";\n\nfunction TrainerProfile(props) {\n  // Retrieve pokemon data from each trainer\n  let getPokemons = e => {\n    fetch(\"http://localhost:3001/api/\" + props.name + \"/pokemons\").then(async response => {\n      let jsonResponse = await response.json();\n      console.log(\"Trainer's Pokemon(s):\", jsonResponse); // store in state \n      // this.setState({\n      //     pokemons: jsonResponse\n      // });\n    }).catch(error => console.log(error));\n  };\n\n  console.log(\"pokemon props\", props.pokemons); // Map the pokemon's data from db\n\n  let getPokemonsProfile = props.pokemons.map(pokemon => {\n    return React.createElement(PokemonProfile, {\n      key: pokemon.id,\n      id: pokemon.id,\n      pokemonName: pokemon.name,\n      type: pokemon.type,\n      move: pokemon.move,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    });\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Container, {\n    className: \"trainer-div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Row, {\n    className: \"justify-content-md-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: \"8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: \"justify-content-md-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    as: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, props.name), React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Card.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, getPokemonsProfile)), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(AddPokemonButton, {\n    name: props.name,\n    className: \"addButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }))))))));\n} // const mapDispatchToProps = (dispatch) => {\n//     return {\n//         dispatchAddToMe: (trainerName) => {\n//             console.log(\"Dispatched AddToMe\", trainerName);\n//             dispatch(addToMe(trainerName));\n//         }\n//     }\n// }\n// update pokemon props to the state\n\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    pokemons: state.trainerReducer.trainers[ownProps.name].pokemons\n  };\n};\n\nexport default connect(mapStateToProps)(TrainerProfile);","map":{"version":3,"sources":["/Users/tracynle/Bootcamp/pokemon_mgmt/client/src/components/TrainerProfile/TrainerProfile.jsx"],"names":["React","Card","AddPokemonButton","DeletePokemonButton","Container","Row","Col","connect","PokemonProfile","TrainerProfile","props","getPokemons","e","fetch","name","then","response","jsonResponse","json","console","log","catch","error","pokemons","getPokemonsProfile","map","pokemon","id","type","move","mapStateToProps","state","ownProps","trainerReducer","trainers"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,gBAAP,MAA6B,oDAA7B;AACA,OAAOC,mBAAP,MAAgC,0DAAhC;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAO,aAAP,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,cAAP,MAA2B,gDAA3B;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAE3B;AACA,MAAIC,WAAW,GAAIC,CAAD,IAAO;AACrBC,IAAAA,KAAK,CAAC,+BAA+BH,KAAK,CAACI,IAArC,GAA4C,WAA7C,CAAL,CACCC,IADD,CACM,MAAOC,QAAP,IAAoB;AACtB,UAAIC,YAAY,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAzB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCH,YAArC,EAFsB,CAItB;AACA;AACA;AACA;AACH,KATD,EASGI,KATH,CASSC,KAAK,IAAIH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CATlB;AAUH,GAXD;;AAYAH,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BV,KAAK,CAACa,QAAnC,EAf2B,CAgB3B;;AACA,MAAIC,kBAAkB,GAAGd,KAAK,CAACa,QAAN,CAAeE,GAAf,CAAmBC,OAAO,IAAI;AACnD,WACI,oBAAC,cAAD;AACI,MAAA,GAAG,EAAEA,OAAO,CAACC,EADjB;AAEI,MAAA,EAAE,EAAED,OAAO,CAACC,EAFhB;AAGI,MAAA,WAAW,EAAED,OAAO,CAACZ,IAHzB;AAII,MAAA,IAAI,EAAEY,OAAO,CAACE,IAJlB;AAKI,MAAA,IAAI,EAAEF,OAAO,CAACG,IALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AASH,GAVwB,CAAzB;AAYA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,2BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,EAAE,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKnB,KAAK,CAACI,IADX,CADJ,EAII,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKU,kBADL,CADJ,CADJ,EAMI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AACI,IAAA,IAAI,EAAEd,KAAK,CAACI,IADhB;AAEI,IAAA,SAAS,EAAC,WAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAOI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CANJ,CAJJ,CADJ,CADJ,CADJ,CADJ,CADJ;AAiCH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,MAAMgB,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAEzC,SAAO;AACHT,IAAAA,QAAQ,EAAEQ,KAAK,CAACE,cAAN,CAAqBC,QAArB,CAA8BF,QAAQ,CAAClB,IAAvC,EAA6CS;AADpD,GAAP;AAGH,CALD;;AAQA,eAAehB,OAAO,CAACuB,eAAD,CAAP,CAAyBrB,cAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport AddPokemonButton from \"../../components/AddPokemonButton/AddPokemonButton\";\nimport DeletePokemonButton from \"../../components/DeletePokemonButton/DeletePokemonButton\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"./style.css\";\n// import { addToMe } from \"../../actions\";\nimport { connect } from \"react-redux\";\n\nimport PokemonProfile from \"../../components/PokemonProfile/PokemonProfile\";\n\nfunction TrainerProfile(props) {\n\n    // Retrieve pokemon data from each trainer\n    let getPokemons = (e) => {\n        fetch(\"http://localhost:3001/api/\" + props.name + \"/pokemons\")\n        .then(async (response) => {\n            let jsonResponse = await response.json();\n            console.log(\"Trainer's Pokemon(s):\", jsonResponse);\n            \n            // store in state \n            // this.setState({\n            //     pokemons: jsonResponse\n            // });\n        }).catch(error => console.log(error));\n    }\n    console.log(\"pokemon props\", props.pokemons)\n    // Map the pokemon's data from db\n    let getPokemonsProfile = props.pokemons.map(pokemon => {\n        return (\n            <PokemonProfile \n                key={pokemon.id}\n                id={pokemon.id}\n                pokemonName={pokemon.name}\n                type={pokemon.type}\n                move={pokemon.move}\n            />\n        )\n    })\n\n    return (\n        <div>\n            <Container className=\"trainer-div\">\n                <Row className=\"justify-content-md-center\">\n                    <Col md=\"8\">\n                        <Card className=\"justify-content-md-center\">\n                            <Card.Header as=\"h5\">\n                                {props.name}\n                            </Card.Header>\n                            <Card.Body>\n                                <Card.Text>\n                                    <span className=\"list\">\n                                        {getPokemonsProfile}\n                                    </span>\n                                </Card.Text>\n                                <Row>\n                                    <Col>\n                                        <AddPokemonButton\n                                            name={props.name} \n                                            className=\"addButton\">\n                                        </AddPokemonButton>\n                                    </Col>\n                                    <Col>\n                                    </Col>\n                                </Row>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n    \n}\n\n// const mapDispatchToProps = (dispatch) => {\n//     return {\n//         dispatchAddToMe: (trainerName) => {\n//             console.log(\"Dispatched AddToMe\", trainerName);\n//             dispatch(addToMe(trainerName));\n//         }\n//     }\n// }\n\n// update pokemon props to the state\nconst mapStateToProps = (state, ownProps) => {\n    \n    return {\n        pokemons: state.trainerReducer.trainers[ownProps.name].pokemons\n    }\n}\n\n\nexport default connect(mapStateToProps)(TrainerProfile);"]},"metadata":{},"sourceType":"module"}