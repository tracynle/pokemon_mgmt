{"ast":null,"code":"import _slicedToArray from \"/Users/tracynle/Bootcamp/pokemon_mgmt/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tracynle/Bootcamp/pokemon_mgmt/client/src/components/TrainerForm/TrainerForm.jsx\";\nimport React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport \"./style.css\";\nimport { addTrainer } from \"../../actions\";\nimport { connect } from 'react-redux';\n\nfunction trainerForm(props) {\n  const _useState = useState({\n    trainerName: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  let nameInput = e => {\n    setState({\n      trainerName: e.target.value\n    });\n  };\n\n  return React.createElement(Form, {\n    className: \"trainerForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"formBasic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Name\"), React.createElement(Form.Control, {\n    onChange: nameInput,\n    type: \"text\",\n    placeholder: \"Enter name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })), React.createElement(Button, {\n    variant: \"primary\",\n    onClick: () => {\n      props.onHide();\n      props.submitForm({\n        name: state.trainerName,\n        pokemons: []\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Submit\"));\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    submitForm: data => {\n      console.log(\"Submitted!\", data);\n      dispatch(addTrainer(data));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(trainerForm);","map":{"version":3,"sources":["/Users/tracynle/Bootcamp/pokemon_mgmt/client/src/components/TrainerForm/TrainerForm.jsx"],"names":["React","useState","Button","Form","addTrainer","connect","trainerForm","props","trainerName","state","setState","nameInput","e","target","value","onHide","submitForm","name","pokemons","mapDispatchToProps","dispatch","data","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAO,aAAP;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA,oBACAN,QAAQ,CAAC;AACjCO,IAAAA,WAAW,EAAE;AADoB,GAAD,CADR;AAAA;AAAA,QACnBC,KADmB;AAAA,QACZC,QADY;;AAK1B,MAAIC,SAAS,GAAIC,CAAD,IAAO;AACrBF,IAAAA,QAAQ,CAAC;AACPF,MAAAA,WAAW,EAAEI,CAAC,CAACC,MAAF,CAASC;AADf,KAAD,CAAR;AAGD,GAJD;;AAMA,SACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,QAAQ,EAAEH,SAAxB;AAAmC,IAAA,IAAI,EAAC,MAAxC;AAA+C,IAAA,WAAW,EAAC,YAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADJ,EAqBI,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,SADV;AAEE,IAAA,OAAO,EAAE,MAAM;AACbJ,MAAAA,KAAK,CAACQ,MAAN;AACAR,MAAAA,KAAK,CAACS,UAAN,CAAiB;AACfC,QAAAA,IAAI,EAAER,KAAK,CAACD,WADG;AAEfU,QAAAA,QAAQ,EAAE;AAFK,OAAjB;AAGD,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBJ,CADF;AAmCD;;AAED,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLJ,IAAAA,UAAU,EAAGK,IAAD,IAAU;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,IAA1B;AACAD,MAAAA,QAAQ,CAAChB,UAAU,CAACiB,IAAD,CAAX,CAAR;AACH;AAJI,GAAP;AAMD,CAPD;;AASA,eAAehB,OAAO,CAAC,IAAD,EAAOc,kBAAP,CAAP,CAAkCb,WAAlC,CAAf","sourcesContent":["import React, {useState} from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport \"./style.css\";\nimport { addTrainer } from \"../../actions\";\nimport { connect } from 'react-redux';\n\nfunction trainerForm(props) {\n  const [state, setState] = useState({\n    trainerName: \"\"\n  })\n\n  let nameInput = (e) => {\n    setState({\n      trainerName: e.target.value\n    })\n  }\n\n  return (\n    <Form className=\"trainerForm\">\n        <Form.Group controlId=\"formBasic\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control onChange={nameInput} type=\"text\" placeholder=\"Enter name\" />\n        </Form.Group>\n    \n        {/* <Form.Group controlId=\"formBasic\">\n          <Form.Label>Pokemon</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Pokemon name\" />\n        </Form.Group>\n        \n        <Form.Group controlId=\"formBasic\">\n          <Form.Label>Type</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Enter type\" />\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasic\">\n          <Form.Label>Move</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Enter moves\" />\n        </Form.Group> */}\n\n        <Button \n          variant=\"primary\" \n          onClick={() => {\n            props.onHide();\n            props.submitForm({\n              name: state.trainerName,\n              pokemons: []\n        })}}>\n          Submit\n        </Button>\n    </Form>\n  )\n\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    submitForm: (data) => {\n        console.log(\"Submitted!\", data);\n        dispatch(addTrainer(data));\n    }\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(trainerForm);"]},"metadata":{},"sourceType":"module"}