{"ast":null,"code":"// Actions are what you want to do\n// Add and Delete trainer and pokemon\n// ===== TRAINER ACTIONS =====\nexport const getTrainersAction = () => {\n  return async (dispatch, getState) => {\n    let fetchPromise = fetch(\"http://localhost:3001/api/trainers\");\n    let response = await fetchPromise;\n    let trainers = await response.json(); // trainers is an array\n\n    console.log(\"Response from fetching trainers:\", trainers);\n\n    for (let i = 0; i < trainers.length; i++) {\n      let trainer = trainers[i];\n      fetchPromise = fetch(\"http://localhost:3001/api/\".concat(trainer.name, \"/pokemons\"));\n      response = await fetchPromise;\n      let pokemons = await response.json();\n      trainer.pokemons = pokemons;\n    }\n\n    dispatch({\n      type: \"FETCHED TRAINERS FROM API\",\n      data: trainers\n    });\n  };\n};\nexport const addTrainer = data => {\n  return {\n    type: 'ADD TRAINER',\n    data: data\n  };\n};\nexport const getDeleteTrainerAction = name => {\n  return {\n    type: 'DELETE TRAINER',\n    name: name\n  };\n};\nexport const searchTrainer = data => {\n  return {\n    type: 'SEARCH TRAINER',\n    data: data\n  };\n}; // ===== POKEMON ACTIONS =====\n\nexport const getAddPokemonAction = data => {\n  return {\n    type: 'ADD POKEMON',\n    data: data\n  };\n};\nexport const getDeletePokemonAction = (id, name) => {\n  return {\n    type: 'DELETE POKEMON',\n    id: id,\n    name: name\n  };\n};\nexport const searchPokemon = data => {\n  return {\n    type: 'SEARCH POKEMON',\n    data: data\n  };\n};\nexport const getAddToMeAction = data => {\n  return {\n    type: 'ADD TO ME',\n    data: data\n  };\n};","map":{"version":3,"sources":["/Users/tracynle/Bootcamp/pokemon_mgmt/client/src/actions/index.js"],"names":["getTrainersAction","dispatch","getState","fetchPromise","fetch","response","trainers","json","console","log","i","length","trainer","name","pokemons","type","data","addTrainer","getDeleteTrainerAction","searchTrainer","getAddPokemonAction","getDeletePokemonAction","id","searchPokemon","getAddToMeAction"],"mappings":"AAAA;AACA;AAEA;AACA,OAAO,MAAMA,iBAAiB,GAAG,MAAM;AAEnC,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACjC,QAAIC,YAAY,GAAGC,KAAK,CAAC,oCAAD,CAAxB;AACA,QAAIC,QAAQ,GAAG,MAAMF,YAArB;AACA,QAAIG,QAAQ,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAArB,CAHiC,CAGK;;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDH,QAAhD;;AAEA,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,QAAQ,CAACK,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtC,UAAIE,OAAO,GAAGN,QAAQ,CAACI,CAAD,CAAtB;AACAP,MAAAA,YAAY,GAAGC,KAAK,qCAA8BQ,OAAO,CAACC,IAAtC,eAApB;AACAR,MAAAA,QAAQ,GAAG,MAAMF,YAAjB;AACA,UAAIW,QAAQ,GAAG,MAAMT,QAAQ,CAACE,IAAT,EAArB;AACAK,MAAAA,OAAO,CAACE,QAAR,GAAmBA,QAAnB;AACH;;AAEDb,IAAAA,QAAQ,CAAC;AACLc,MAAAA,IAAI,EAAE,2BADD;AAELC,MAAAA,IAAI,EAAEV;AAFD,KAAD,CAAR;AAIH,GAlBD;AAmBH,CArBM;AAuBP,OAAO,MAAMW,UAAU,GAAID,IAAD,IAAU;AAChC,SAAO;AACHD,IAAAA,IAAI,EAAE,aADH;AAEHC,IAAAA,IAAI,EAAEA;AAFH,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,sBAAsB,GAAIL,IAAD,IAAU;AAC5C,SAAO;AACHE,IAAAA,IAAI,EAAE,gBADH;AAEHF,IAAAA,IAAI,EAAEA;AAFH,GAAP;AAIH,CALM;AAOP,OAAO,MAAMM,aAAa,GAAIH,IAAD,IAAU;AACnC,SAAO;AACHD,IAAAA,IAAI,EAAE,gBADH;AAEHC,IAAAA,IAAI,EAAEA;AAFH,GAAP;AAIH,CALM,C,CAOP;;AACA,OAAO,MAAMI,mBAAmB,GAAIJ,IAAD,IAAU;AACzC,SAAO;AACHD,IAAAA,IAAI,EAAE,aADH;AAEHC,IAAAA,IAAI,EAAEA;AAFH,GAAP;AAIH,CALM;AAOP,OAAO,MAAMK,sBAAsB,GAAG,CAACC,EAAD,EAAKT,IAAL,KAAc;AAChD,SAAO;AACHE,IAAAA,IAAI,EAAE,gBADH;AAEHO,IAAAA,EAAE,EAAEA,EAFD;AAGHT,IAAAA,IAAI,EAAEA;AAHH,GAAP;AAKH,CANM;AAQP,OAAO,MAAMU,aAAa,GAAIP,IAAD,IAAU;AACnC,SAAO;AACHD,IAAAA,IAAI,EAAE,gBADH;AAEHC,IAAAA,IAAI,EAAEA;AAFH,GAAP;AAIH,CALM;AAOP,OAAO,MAAMQ,gBAAgB,GAAIR,IAAD,IAAU;AACtC,SAAO;AACHD,IAAAA,IAAI,EAAE,WADH;AAEHC,IAAAA,IAAI,EAAEA;AAFH,GAAP;AAIH,CALM","sourcesContent":["// Actions are what you want to do\n// Add and Delete trainer and pokemon\n\n// ===== TRAINER ACTIONS =====\nexport const getTrainersAction = () => {\n\n    return async (dispatch, getState) => {\n        let fetchPromise = fetch(\"http://localhost:3001/api/trainers\");\n        let response = await fetchPromise;\n        let trainers = await response.json(); // trainers is an array\n        console.log(\"Response from fetching trainers:\", trainers);\n\n        for (let i = 0; i < trainers.length; i++) {\n            let trainer = trainers[i];\n            fetchPromise = fetch(`http://localhost:3001/api/${trainer.name}/pokemons`);\n            response = await fetchPromise;\n            let pokemons = await response.json();\n            trainer.pokemons = pokemons;\n        }\n\n        dispatch({\n            type: \"FETCHED TRAINERS FROM API\",\n            data: trainers\n        });\n    }\n};\n\nexport const addTrainer = (data) => {\n    return {\n        type: 'ADD TRAINER',\n        data: data\n    };\n}\n\nexport const getDeleteTrainerAction = (name) => {\n    return {\n        type: 'DELETE TRAINER',\n        name: name\n    };\n}\n\nexport const searchTrainer = (data) => {\n    return {\n        type: 'SEARCH TRAINER',\n        data: data\n    };\n}\n\n// ===== POKEMON ACTIONS =====\nexport const getAddPokemonAction = (data) => {\n    return {\n        type: 'ADD POKEMON',\n        data: data\n    };\n}\n\nexport const getDeletePokemonAction = (id, name) => {\n    return {\n        type: 'DELETE POKEMON',\n        id: id,\n        name: name\n    };\n}\n\nexport const searchPokemon = (data) => {\n    return {\n        type: 'SEARCH POKEMON',\n        data: data\n    };\n}\n\nexport const getAddToMeAction = (data) => {\n    return {\n        type: 'ADD TO ME',\n        data: data\n    }\n}\n"]},"metadata":{},"sourceType":"module"}